[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/index.js",
    "content": "import PhaserLifecyclePlugin from \"./phaser-lifecycle-plugin\";\r\n\r\nexport default PhaserLifecyclePlugin;\r\n",
    "static": true,
    "longname": "C:/Users/mikewesthad/Documents/GitHub/phaser-lifecycle-plugin/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "file",
    "name": "src/logger.js",
    "content": "export default {\r\n  log: console.log,\r\n  warn: console.warn,\r\n  error: console.error\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/mikewesthad/Documents/GitHub/phaser-lifecycle-plugin/src/logger.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 50,
    "kind": "file",
    "name": "src/phaser-lifecycle-plugin.js",
    "content": "// TODO:\r\n// - add config option to add() to allow custom mapping to update/preupdate/postupdate\r\n// - add priority/\r\n// - docs\r\n// - more tests\r\n\r\nimport Phaser from \"phaser\";\r\n\r\n/**\r\n * Plugin that wraps around Phaser's event system. This allows us to avoid the issues around the\r\n * EventEmitter library Phaser uses where the EE caches the listeners at the start of an event. This\r\n * leads to bugs if a listener gets unsubscribed during an event (e.g. the physics system\r\n * unsubscribing a listener via a CB before the listener's update method). This plugin immediately\r\n * unsubscribes the listener.\r\n */\r\nexport default class LifecyclePlugin extends Phaser.Plugins.ScenePlugin {\r\n  constructor(scene, pluginManager) {\r\n    super(scene, pluginManager);\r\n\r\n    this.scene = scene;\r\n    this.systems = scene.sys;\r\n\r\n    this.updateListeners = new Set();\r\n    this.preUpdateListeners = new Set();\r\n    this.postUpdateListeners = new Set();\r\n\r\n    if (!scene.sys.settings.isBooted) this.systems.events.once(\"boot\", this.boot, this);\r\n  }\r\n\r\n  boot() {\r\n    const emitter = this.systems.events;\r\n    emitter.on(\"update\", this.onUpdate, this);\r\n    emitter.on(\"preupdate\", this.onPreUpdate, this);\r\n    emitter.on(\"postupdate\", this.onPostUpdate, this);\r\n    emitter.on(\"shutdown\", this.onShutdown, this);\r\n    emitter.once(\"destroy\", this.onDestroy, this);\r\n  }\r\n\r\n  onUpdate(...args) {\r\n    this.updateListeners.forEach(obj => obj.update(...args));\r\n  }\r\n\r\n  onPreUpdate(...args) {\r\n    this.preUpdateListeners.forEach(obj => obj.preUpdate(...args));\r\n  }\r\n\r\n  onPostUpdate(...args) {\r\n    this.postUpdateListeners.forEach(obj => obj.postUpdate(...args));\r\n  }\r\n\r\n  onShutdown() {\r\n    this.updateListeners.clear();\r\n    this.preUpdateListeners.clear();\r\n    this.postUpdateListeners.clear();\r\n  }\r\n\r\n  onDestroy() {\r\n    const emitter = this.systems.events;\r\n\r\n    emitter.off(\"update\", this.onUpdate, this);\r\n    emitter.off(\"preupdate\", this.onPreUpdate, this);\r\n    emitter.off(\"postupdate\", this.onPostUpdate, this);\r\n    emitter.off(\"shutdown\", this.onShutdown, this);\r\n\r\n    this.updateListeners.clear();\r\n    this.preUpdateListeners.clear();\r\n    this.postUpdateListeners.clear();\r\n  }\r\n\r\n  add(obj) {\r\n    if (obj.update) this.updateListeners.add(obj);\r\n    if (obj.preUpdate) this.preUpdateListeners.add(obj);\r\n    if (obj.postUpdate) this.postUpdateListeners.add(obj);\r\n  }\r\n\r\n  remove(obj) {\r\n    this.updateListeners.delete(obj);\r\n    this.preUpdateListeners.delete(obj);\r\n    this.postUpdateListeners.delete(obj);\r\n  }\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/mikewesthad/Documents/GitHub/phaser-lifecycle-plugin/src/phaser-lifecycle-plugin.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 51,
    "kind": "class",
    "name": "LifecyclePlugin",
    "memberof": "src/phaser-lifecycle-plugin.js",
    "static": true,
    "longname": "src/phaser-lifecycle-plugin.js~LifecyclePlugin",
    "access": "public",
    "export": true,
    "importPath": "phaser-lifecycle-plugin/src/phaser-lifecycle-plugin.js",
    "importStyle": "LifecyclePlugin",
    "description": "Plugin that wraps around Phaser's event system. This allows us to avoid the issues around the\nEventEmitter library Phaser uses where the EE caches the listeners at the start of an event. This\nleads to bugs if a listener gets unsubscribed during an event (e.g. the physics system\nunsubscribing a listener via a CB before the listener's update method). This plugin immediately\nunsubscribes the listener.",
    "lineNumber": 16,
    "interface": false,
    "extends": [
      "phaser~Phaser.Plugins.ScenePlugin"
    ]
  },
  {
    "__docId__": 52,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/phaser-lifecycle-plugin.js~LifecyclePlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/phaser-lifecycle-plugin.js~LifecyclePlugin#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 53,
    "kind": "member",
    "name": "scene",
    "memberof": "src/phaser-lifecycle-plugin.js~LifecyclePlugin",
    "static": false,
    "longname": "src/phaser-lifecycle-plugin.js~LifecyclePlugin#scene",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 54,
    "kind": "member",
    "name": "systems",
    "memberof": "src/phaser-lifecycle-plugin.js~LifecyclePlugin",
    "static": false,
    "longname": "src/phaser-lifecycle-plugin.js~LifecyclePlugin#systems",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 55,
    "kind": "member",
    "name": "updateListeners",
    "memberof": "src/phaser-lifecycle-plugin.js~LifecyclePlugin",
    "static": false,
    "longname": "src/phaser-lifecycle-plugin.js~LifecyclePlugin#updateListeners",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 56,
    "kind": "member",
    "name": "preUpdateListeners",
    "memberof": "src/phaser-lifecycle-plugin.js~LifecyclePlugin",
    "static": false,
    "longname": "src/phaser-lifecycle-plugin.js~LifecyclePlugin#preUpdateListeners",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 57,
    "kind": "member",
    "name": "postUpdateListeners",
    "memberof": "src/phaser-lifecycle-plugin.js~LifecyclePlugin",
    "static": false,
    "longname": "src/phaser-lifecycle-plugin.js~LifecyclePlugin#postUpdateListeners",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 58,
    "kind": "method",
    "name": "boot",
    "memberof": "src/phaser-lifecycle-plugin.js~LifecyclePlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/phaser-lifecycle-plugin.js~LifecyclePlugin#boot",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 59,
    "kind": "method",
    "name": "onUpdate",
    "memberof": "src/phaser-lifecycle-plugin.js~LifecyclePlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/phaser-lifecycle-plugin.js~LifecyclePlugin#onUpdate",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "params": [
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": null
  },
  {
    "__docId__": 60,
    "kind": "method",
    "name": "onPreUpdate",
    "memberof": "src/phaser-lifecycle-plugin.js~LifecyclePlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/phaser-lifecycle-plugin.js~LifecyclePlugin#onPreUpdate",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "params": [
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": null
  },
  {
    "__docId__": 61,
    "kind": "method",
    "name": "onPostUpdate",
    "memberof": "src/phaser-lifecycle-plugin.js~LifecyclePlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/phaser-lifecycle-plugin.js~LifecyclePlugin#onPostUpdate",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "params": [
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": null
  },
  {
    "__docId__": 62,
    "kind": "method",
    "name": "onShutdown",
    "memberof": "src/phaser-lifecycle-plugin.js~LifecyclePlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/phaser-lifecycle-plugin.js~LifecyclePlugin#onShutdown",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 63,
    "kind": "method",
    "name": "onDestroy",
    "memberof": "src/phaser-lifecycle-plugin.js~LifecyclePlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/phaser-lifecycle-plugin.js~LifecyclePlugin#onDestroy",
    "access": "public",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 64,
    "kind": "method",
    "name": "add",
    "memberof": "src/phaser-lifecycle-plugin.js~LifecyclePlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/phaser-lifecycle-plugin.js~LifecyclePlugin#add",
    "access": "public",
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 65,
    "kind": "method",
    "name": "remove",
    "memberof": "src/phaser-lifecycle-plugin.js~LifecyclePlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/phaser-lifecycle-plugin.js~LifecyclePlugin#remove",
    "access": "public",
    "description": null,
    "lineNumber": 76,
    "undocument": true,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "kind": "index",
    "content": "# Phaser Lifecycle Plugin\r\n\r\nA Phaser 3 plugin to make it easier to have custom objects hook into Phaser's lifecycle events - preupdate, postupdate, etc.\r\n\r\nNote: this plugin is still in progress and will be updated to an official release with docs soon!\r\n\r\nTODO: insert small snippet example here.\r\n\r\nCheck out the HTML documentation [here](https://sporadic-labs.github.io/phaser-lifecycle-plugin/docs/manual/README.html).\r\n\r\n## Why\r\n\r\nThe plugin that wraps around Phaser's event system (which is based on EventEmitter3). This allows us to avoid the issues around the EventEmitter3 library where the event emitter caches the listeners at the start of an event. E.g. at the beginning of an \"update\" event, the array of listeners is cached. That leads to bugs if a listener gets unsubscribed during an event, a listener is destroyed during the physics system's update. That listener may still get invoked during update. This plugin immediately unsubscribes the listener.\r\n\r\n## Installation\r\n\r\nYou can install this plugin globally as a script, or locally as a module using your bundler of choice.\r\n\r\n### As a Script\r\n\r\nYou can drop in any of the transpiled code into your project as a standalone script. Choose the version that you want:\r\n\r\n- [minified code](https://raw.githubusercontent.com/sporadic-labs/phaser-lifecycle-plugin/master/dist/phaser-lifecycle-plugin.min.js) & optional [source map](https://raw.githubusercontent.com/sporadic-labs/phaser-lifecycle-plugin/master/dist/phaser-lifecycle-plugin.min.js.map)\r\n- [unminified code](https://raw.githubusercontent.com/sporadic-labs/phaser-lifecycle-plugin/master/dist/phaser-lifecycle-plugin.js) & optional [source map](https://raw.githubusercontent.com/sporadic-labs/phaser-lifecycle-plugin/master/dist/phaser-lifecycle-plugin.js.map)\r\n\r\nE.g. if you wanted the minified code, you would add this to your HTML:\r\n\r\n```html\r\n<script src=\"phaser-lifecycle-plugin.min.js\"></script>\r\n```\r\n\r\nOr use the jsdelivr CDN:\r\n\r\n```html\r\n<script src=\"//cdn.jsdelivr.net/npm/phaser-lifecycle-plugin\"></script>\r\n```\r\n\r\nNow you can use the global `PhaserLifecyclePlugin`. See [usage](#usage) for how to use the plugin.\r\n\r\n### As a Module\r\n\r\nInstall via npm:\r\n\r\n```\r\nnpm install --save phaser-lifecycle-plugin\r\n```\r\n\r\nTo use the transpiled and minified distribution of the library:\r\n\r\n```js\r\nimport PhaserLifecyclePlugin from \"phaser-lifecycle-plugin\";\r\n```\r\n\r\nTo use the raw library (so you can transpile it to match your own project settings):\r\n\r\n```js\r\nimport PhaserLifecyclePlugin from \"phaser-lifecycle-plugin/src\";\r\n```\r\n\r\nSee [usage](#usage) for how to use the plugin.\r\n\r\n## Usage\r\n\r\n### Initial Setup\r\n\r\nWhen setting up your game config, add the plugin:\r\n\r\n```js\r\nconst config = {\r\n  // ...\r\n\r\n  // Install the scene plugin\r\n  plugins: {\r\n    scene: [\r\n      {\r\n        plugin: PhaserLifecyclePlugin, // The plugin class\r\n        key: \"lifecycle\", // Where to store in Scene.Systems, e.g. scene.sys.lifecycle\r\n        mapping: \"lifecycle\" // Where to store in the Scene, e.g. scene.lifecycle\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nconst game = new Phaser.Game(config);\r\n```\r\n\r\nNow, within a scene, you can use `this.lifecycle` to access the plugin instance.\r\n\r\n### Usage in Scene\r\n\r\nWithin a scene, you can now:\r\n\r\n```js\r\nclass CustomPlayer {\r\n  update() {\r\n    console.log(\"Update!\");\r\n  }\r\n  preUpdate() {\r\n    console.log(\"Before update!\");\r\n  }\r\n  postUpdate() {\r\n    console.log(\"After update!\");\r\n  }\r\n}\r\n\r\nconst player = new CustomPlayer();\r\nthis.lifecycle.add(player);\r\n```\r\n\r\nAnd the player's `update`, `preUpdate` and `postUpdate` methods will be invoked in sync with the scene events. Running `this.lifecycle.remove(player)` will stop those methods from being invoked.\r\n\r\nTODO: better example with custom mapping & showing how each method hook is optional.\r\n\r\n## Development\r\n\r\nThe project is controlled by npm scripts and uses cypress & jest for testing. Cypress is used for end-to-end verification that the plugin works as expected with Phaser. Jest is used for unit testing the plugin (via heavy mocking since Phaser headless mode is not complete).\r\n\r\n- The `watch` and `build` tasks will build the plugin source in library/ or the projects in end-to-end-tests/\r\n- The `serve` task opens the whole project (starting at the root) in a server\r\n- The `dev` task will build & watch the library, tests and open up the server. This is useful for creating tests and updating the library.\r\n- The `dev:cypress` task will build & watch the library & tests, as well as open up cypress in headed mode. This is useful for checking out individual tests and debugging them.\r\n- The `test:cypress` task will build the tests and run cypress in headless mode to check all end-to-end tests.\r\n- The `test:jest` will run the jest tests.\r\n\r\n## Tests\r\n\r\nThe cypress tests rely on a particular structure:\r\n\r\n- Each test game inside of \"end-to-end-tests/\" should have an \"index.html\" file as the entry point. \"src/js/index.js\" will be compiled to \"build/js/index.js\" by webpack. (Cypress doesn't support `type=\"module\"` on scripts, so this is necessary if we need modules.)\r\n- Each test has access to `test-utils.js` which provides `startTest`, `passTest` and `failTest` methods. Call `startTest` at the beginning and pass/fail when the test passes/fails. This manipulates in the DOM in a way that cypress is expecting.\r\n- Each test in \"cypress/integration/\" simply loads up the specified URL and waits for it to pass or timeout. (Technically, startTest and failTest are ignored, but they are useful for visual inspection of a test.)\r\n\r\nThe jest unit tests rely on a simple mocking of Phaser. They are stored inside \"src/\". Once Phaser headless is available, this testing structure could be re-evaluated.\r\n\r\n## Similar Work\r\n\r\nsamme's nice [phaser-plugin-update](https://github.com/samme/phaser-plugin-update) is similar, but just focused on update, whereas our use case requires more of Phaser's life cycle hooks.\r\n",
    "longname": "C:\\Users\\mikewesthad\\Documents\\GitHub\\phaser-lifecycle-plugin\\README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\r\n  \"name\": \"phaser-lifecycle-plugin\",\r\n  \"version\": \"0.0.1\",\r\n  \"description\": \"A Phaser 3 plugin to make it easier to have custom objects hook into Phaser's lifecycle events - preupdate, postupdate, etc.\",\r\n  \"main\": \"dist/phaser-lifecycle-plugin.min.js\",\r\n  \"files\": [\r\n    \"src/!(mocks|tests)\",\r\n    \"dist\"\r\n  ],\r\n  \"scripts\": {\r\n    \"build:library\": \"webpack --mode production --config config/webpack.config.js\",\r\n    \"build:tests\": \"webpack --mode development --config config/webpack.test.config.js\",\r\n    \"watch:library\": \"webpack --mode development --config config/webpack.config.js --watch\",\r\n    \"watch:tests\": \"webpack --mode development --config config/webpack.test.config.js --watch\",\r\n    \"serve\": \"browser-sync start --server \\\".\\\" --directory --watch --startPath \\\"/end-to-end-tests\\\"\",\r\n    \"dev\": \"concurrently \\\"npm run watch:tests\\\" \\\"npm run watch:library\\\" \\\"npm run serve\\\"\",\r\n    \"dev:cypress\": \"concurrently \\\"npm run watch:tests\\\" \\\"npm run watch:library\\\" \\\"cypress open\\\"\",\r\n    \"test:jest\": \"jest --config=./config/jest.config.js\",\r\n    \"pretest:cypress\": \"npm run build:tests\",\r\n    \"test:cypress\": \"cypress run\",\r\n    \"doc\": \"esdoc -c ./config/esdoc.json\",\r\n    \"predeploy:doc\": \"npm run doc\",\r\n    \"deploy:doc\": \"gh-pages --branch gh-pages --dist ./docs/build --dest docs\",\r\n    \"prepublishOnly\": \"npm run build:library\",\r\n    \"pull-types\": \"curl https://raw.githubusercontent.com/photonstorm/phaser3-docs/master/typescript/phaser.d.ts --create-dirs --location --output ./types/phaser.d.ts\"\r\n  },\r\n  \"repository\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"git+https://github.com/sporadic-labs/phaser-lifecycle-plugin.git\"\r\n  },\r\n  \"keywords\": [\r\n    \"phaser\",\r\n    \"phaser plugin\",\r\n    \"game engine\"\r\n  ],\r\n  \"prettier\": {\r\n    \"printWidth\": 100\r\n  },\r\n  \"author\": \"Michael Hadley\",\r\n  \"license\": \"MIT\",\r\n  \"bugs\": {\r\n    \"url\": \"https://github.com/sporadic-labs/phaser-lifecycle-plugin/issues\"\r\n  },\r\n  \"homepage\": \"https://github.com/sporadic-labs/phaser-lifecycle-plugin#readme\",\r\n  \"devDependencies\": {\r\n    \"babel-core\": \"^6.26.3\",\r\n    \"babel-jest\": \"^23.4.2\",\r\n    \"babel-loader\": \"^7.1.5\",\r\n    \"babel-preset-env\": \"^1.7.0\",\r\n    \"browser-sync\": \"^2.24.6\",\r\n    \"concurrently\": \"^3.6.1\",\r\n    \"cypress\": \"^3.1.0\",\r\n    \"esdoc\": \"^1.1.0\",\r\n    \"esdoc-inject-style-plugin\": \"^1.0.0\",\r\n    \"esdoc-standard-plugin\": \"^1.0.0\",\r\n    \"eslint\": \"^5.4.0\",\r\n    \"eslint-config-prettier\": \"^3.0.1\",\r\n    \"eslint-plugin-prettier\": \"^2.6.2\",\r\n    \"eventemitter3\": \"^3.1.0\",\r\n    \"gh-pages\": \"^1.2.0\",\r\n    \"jest\": \"^23.5.0\",\r\n    \"phaser\": \"^3.11.0\",\r\n    \"prettier\": \"^1.14.2\",\r\n    \"regenerator-runtime\": \"^0.12.1\",\r\n    \"uglifyjs-webpack-plugin\": \"^1.3.0\",\r\n    \"webpack\": \"^4.16.5\",\r\n    \"webpack-cli\": \"^3.1.0\"\r\n  }\r\n}\r\n",
    "longname": "C:\\Users\\mikewesthad\\Documents\\GitHub\\phaser-lifecycle-plugin\\package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualIndex",
    "globalIndex": true,
    "content": "# Phaser Lifecycle Plugin\r\n\r\nA Phaser 3 plugin to make it easier to have custom objects hook into Phaser's lifecycle events - preupdate, postupdate, etc.\r\n\r\nNote: this plugin is still in progress and will be updated to an official release with docs soon!\r\n\r\nTODO: insert small snippet example here.\r\n\r\nCheck out the HTML documentation [here](https://sporadic-labs.github.io/phaser-lifecycle-plugin/docs/manual/README.html).\r\n\r\n## Why\r\n\r\nThe plugin that wraps around Phaser's event system (which is based on EventEmitter3). This allows us to avoid the issues around the EventEmitter3 library where the event emitter caches the listeners at the start of an event. E.g. at the beginning of an \"update\" event, the array of listeners is cached. That leads to bugs if a listener gets unsubscribed during an event, a listener is destroyed during the physics system's update. That listener may still get invoked during update. This plugin immediately unsubscribes the listener.\r\n\r\n## Installation\r\n\r\nYou can install this plugin globally as a script, or locally as a module using your bundler of choice.\r\n\r\n### As a Script\r\n\r\nYou can drop in any of the transpiled code into your project as a standalone script. Choose the version that you want:\r\n\r\n- [minified code](https://raw.githubusercontent.com/sporadic-labs/phaser-lifecycle-plugin/master/dist/phaser-lifecycle-plugin.min.js) & optional [source map](https://raw.githubusercontent.com/sporadic-labs/phaser-lifecycle-plugin/master/dist/phaser-lifecycle-plugin.min.js.map)\r\n- [unminified code](https://raw.githubusercontent.com/sporadic-labs/phaser-lifecycle-plugin/master/dist/phaser-lifecycle-plugin.js) & optional [source map](https://raw.githubusercontent.com/sporadic-labs/phaser-lifecycle-plugin/master/dist/phaser-lifecycle-plugin.js.map)\r\n\r\nE.g. if you wanted the minified code, you would add this to your HTML:\r\n\r\n```html\r\n<script src=\"phaser-lifecycle-plugin.min.js\"></script>\r\n```\r\n\r\nOr use the jsdelivr CDN:\r\n\r\n```html\r\n<script src=\"//cdn.jsdelivr.net/npm/phaser-lifecycle-plugin\"></script>\r\n```\r\n\r\nNow you can use the global `PhaserLifecyclePlugin`. See [usage](#usage) for how to use the plugin.\r\n\r\n### As a Module\r\n\r\nInstall via npm:\r\n\r\n```\r\nnpm install --save phaser-lifecycle-plugin\r\n```\r\n\r\nTo use the transpiled and minified distribution of the library:\r\n\r\n```js\r\nimport PhaserLifecyclePlugin from \"phaser-lifecycle-plugin\";\r\n```\r\n\r\nTo use the raw library (so you can transpile it to match your own project settings):\r\n\r\n```js\r\nimport PhaserLifecyclePlugin from \"phaser-lifecycle-plugin/src\";\r\n```\r\n\r\nSee [usage](#usage) for how to use the plugin.\r\n\r\n## Usage\r\n\r\n### Initial Setup\r\n\r\nWhen setting up your game config, add the plugin:\r\n\r\n```js\r\nconst config = {\r\n  // ...\r\n\r\n  // Install the scene plugin\r\n  plugins: {\r\n    scene: [\r\n      {\r\n        plugin: PhaserLifecyclePlugin, // The plugin class\r\n        key: \"lifecycle\", // Where to store in Scene.Systems, e.g. scene.sys.lifecycle\r\n        mapping: \"lifecycle\" // Where to store in the Scene, e.g. scene.lifecycle\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nconst game = new Phaser.Game(config);\r\n```\r\n\r\nNow, within a scene, you can use `this.lifecycle` to access the plugin instance.\r\n\r\n### Usage in Scene\r\n\r\nWithin a scene, you can now:\r\n\r\n```js\r\nclass CustomPlayer {\r\n  update() {\r\n    console.log(\"Update!\");\r\n  }\r\n  preUpdate() {\r\n    console.log(\"Before update!\");\r\n  }\r\n  postUpdate() {\r\n    console.log(\"After update!\");\r\n  }\r\n}\r\n\r\nconst player = new CustomPlayer();\r\nthis.lifecycle.add(player);\r\n```\r\n\r\nAnd the player's `update`, `preUpdate` and `postUpdate` methods will be invoked in sync with the scene events. Running `this.lifecycle.remove(player)` will stop those methods from being invoked.\r\n\r\nTODO: better example with custom mapping & showing how each method hook is optional.\r\n\r\n## Development\r\n\r\nThe project is controlled by npm scripts and uses cypress & jest for testing. Cypress is used for end-to-end verification that the plugin works as expected with Phaser. Jest is used for unit testing the plugin (via heavy mocking since Phaser headless mode is not complete).\r\n\r\n- The `watch` and `build` tasks will build the plugin source in library/ or the projects in end-to-end-tests/\r\n- The `serve` task opens the whole project (starting at the root) in a server\r\n- The `dev` task will build & watch the library, tests and open up the server. This is useful for creating tests and updating the library.\r\n- The `dev:cypress` task will build & watch the library & tests, as well as open up cypress in headed mode. This is useful for checking out individual tests and debugging them.\r\n- The `test:cypress` task will build the tests and run cypress in headless mode to check all end-to-end tests.\r\n- The `test:jest` will run the jest tests.\r\n\r\n## Tests\r\n\r\nThe cypress tests rely on a particular structure:\r\n\r\n- Each test game inside of \"end-to-end-tests/\" should have an \"index.html\" file as the entry point. \"src/js/index.js\" will be compiled to \"build/js/index.js\" by webpack. (Cypress doesn't support `type=\"module\"` on scripts, so this is necessary if we need modules.)\r\n- Each test has access to `test-utils.js` which provides `startTest`, `passTest` and `failTest` methods. Call `startTest` at the beginning and pass/fail when the test passes/fails. This manipulates in the DOM in a way that cypress is expecting.\r\n- Each test in \"cypress/integration/\" simply loads up the specified URL and waits for it to pass or timeout. (Technically, startTest and failTest are ignored, but they are useful for visual inspection of a test.)\r\n\r\nThe jest unit tests rely on a simple mocking of Phaser. They are stored inside \"src/\". Once Phaser headless is available, this testing structure could be re-evaluated.\r\n\r\n## Similar Work\r\n\r\nsamme's nice [phaser-plugin-update](https://github.com/samme/phaser-plugin-update) is similar, but just focused on update, whereas our use case requires more of Phaser's life cycle hooks.\r\n",
    "longname": "C:\\Users\\mikewesthad\\Documents\\GitHub\\phaser-lifecycle-plugin\\README.md",
    "name": "README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\mikewesthad\\Documents\\GitHub\\phaser-lifecycle-plugin\\README.md",
    "name": "README.md",
    "content": "# Phaser Lifecycle Plugin\r\n\r\nA Phaser 3 plugin to make it easier to have custom objects hook into Phaser's lifecycle events - preupdate, postupdate, etc.\r\n\r\nNote: this plugin is still in progress and will be updated to an official release with docs soon!\r\n\r\nTODO: insert small snippet example here.\r\n\r\nCheck out the HTML documentation [here](https://sporadic-labs.github.io/phaser-lifecycle-plugin/docs/manual/README.html).\r\n\r\n## Why\r\n\r\nThe plugin that wraps around Phaser's event system (which is based on EventEmitter3). This allows us to avoid the issues around the EventEmitter3 library where the event emitter caches the listeners at the start of an event. E.g. at the beginning of an \"update\" event, the array of listeners is cached. That leads to bugs if a listener gets unsubscribed during an event, a listener is destroyed during the physics system's update. That listener may still get invoked during update. This plugin immediately unsubscribes the listener.\r\n\r\n## Installation\r\n\r\nYou can install this plugin globally as a script, or locally as a module using your bundler of choice.\r\n\r\n### As a Script\r\n\r\nYou can drop in any of the transpiled code into your project as a standalone script. Choose the version that you want:\r\n\r\n- [minified code](https://raw.githubusercontent.com/sporadic-labs/phaser-lifecycle-plugin/master/dist/phaser-lifecycle-plugin.min.js) & optional [source map](https://raw.githubusercontent.com/sporadic-labs/phaser-lifecycle-plugin/master/dist/phaser-lifecycle-plugin.min.js.map)\r\n- [unminified code](https://raw.githubusercontent.com/sporadic-labs/phaser-lifecycle-plugin/master/dist/phaser-lifecycle-plugin.js) & optional [source map](https://raw.githubusercontent.com/sporadic-labs/phaser-lifecycle-plugin/master/dist/phaser-lifecycle-plugin.js.map)\r\n\r\nE.g. if you wanted the minified code, you would add this to your HTML:\r\n\r\n```html\r\n<script src=\"phaser-lifecycle-plugin.min.js\"></script>\r\n```\r\n\r\nOr use the jsdelivr CDN:\r\n\r\n```html\r\n<script src=\"//cdn.jsdelivr.net/npm/phaser-lifecycle-plugin\"></script>\r\n```\r\n\r\nNow you can use the global `PhaserLifecyclePlugin`. See [usage](#usage) for how to use the plugin.\r\n\r\n### As a Module\r\n\r\nInstall via npm:\r\n\r\n```\r\nnpm install --save phaser-lifecycle-plugin\r\n```\r\n\r\nTo use the transpiled and minified distribution of the library:\r\n\r\n```js\r\nimport PhaserLifecyclePlugin from \"phaser-lifecycle-plugin\";\r\n```\r\n\r\nTo use the raw library (so you can transpile it to match your own project settings):\r\n\r\n```js\r\nimport PhaserLifecyclePlugin from \"phaser-lifecycle-plugin/src\";\r\n```\r\n\r\nSee [usage](#usage) for how to use the plugin.\r\n\r\n## Usage\r\n\r\n### Initial Setup\r\n\r\nWhen setting up your game config, add the plugin:\r\n\r\n```js\r\nconst config = {\r\n  // ...\r\n\r\n  // Install the scene plugin\r\n  plugins: {\r\n    scene: [\r\n      {\r\n        plugin: PhaserLifecyclePlugin, // The plugin class\r\n        key: \"lifecycle\", // Where to store in Scene.Systems, e.g. scene.sys.lifecycle\r\n        mapping: \"lifecycle\" // Where to store in the Scene, e.g. scene.lifecycle\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nconst game = new Phaser.Game(config);\r\n```\r\n\r\nNow, within a scene, you can use `this.lifecycle` to access the plugin instance.\r\n\r\n### Usage in Scene\r\n\r\nWithin a scene, you can now:\r\n\r\n```js\r\nclass CustomPlayer {\r\n  update() {\r\n    console.log(\"Update!\");\r\n  }\r\n  preUpdate() {\r\n    console.log(\"Before update!\");\r\n  }\r\n  postUpdate() {\r\n    console.log(\"After update!\");\r\n  }\r\n}\r\n\r\nconst player = new CustomPlayer();\r\nthis.lifecycle.add(player);\r\n```\r\n\r\nAnd the player's `update`, `preUpdate` and `postUpdate` methods will be invoked in sync with the scene events. Running `this.lifecycle.remove(player)` will stop those methods from being invoked.\r\n\r\nTODO: better example with custom mapping & showing how each method hook is optional.\r\n\r\n## Development\r\n\r\nThe project is controlled by npm scripts and uses cypress & jest for testing. Cypress is used for end-to-end verification that the plugin works as expected with Phaser. Jest is used for unit testing the plugin (via heavy mocking since Phaser headless mode is not complete).\r\n\r\n- The `watch` and `build` tasks will build the plugin source in library/ or the projects in end-to-end-tests/\r\n- The `serve` task opens the whole project (starting at the root) in a server\r\n- The `dev` task will build & watch the library, tests and open up the server. This is useful for creating tests and updating the library.\r\n- The `dev:cypress` task will build & watch the library & tests, as well as open up cypress in headed mode. This is useful for checking out individual tests and debugging them.\r\n- The `test:cypress` task will build the tests and run cypress in headless mode to check all end-to-end tests.\r\n- The `test:jest` will run the jest tests.\r\n\r\n## Tests\r\n\r\nThe cypress tests rely on a particular structure:\r\n\r\n- Each test game inside of \"end-to-end-tests/\" should have an \"index.html\" file as the entry point. \"src/js/index.js\" will be compiled to \"build/js/index.js\" by webpack. (Cypress doesn't support `type=\"module\"` on scripts, so this is necessary if we need modules.)\r\n- Each test has access to `test-utils.js` which provides `startTest`, `passTest` and `failTest` methods. Call `startTest` at the beginning and pass/fail when the test passes/fails. This manipulates in the DOM in a way that cypress is expecting.\r\n- Each test in \"cypress/integration/\" simply loads up the specified URL and waits for it to pass or timeout. (Technically, startTest and failTest are ignored, but they are useful for visual inspection of a test.)\r\n\r\nThe jest unit tests rely on a simple mocking of Phaser. They are stored inside \"src/\". Once Phaser headless is available, this testing structure could be re-evaluated.\r\n\r\n## Similar Work\r\n\r\nsamme's nice [phaser-plugin-update](https://github.com/samme/phaser-plugin-update) is similar, but just focused on update, whereas our use case requires more of Phaser's life cycle hooks.\r\n",
    "static": true,
    "access": "public"
  }
]